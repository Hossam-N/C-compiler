Terminals unused in grammar

   PRINTF
   SCANF
   REPEAT
   UNTIL
   NOT
   INCLUDE
   END


Rules useless in parser due to conflicts

   38 function_data_type: data_type


State 32 conflicts: 1 shift/reduce
State 53 conflicts: 16 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: statement
    2        | program statement
    3        | error SEMICOLON

    4 statement: if_statement
    5          | switch_statement
    6          | iteration_statement
    7          | function_call_statement
    8          | CONTINUE SEMICOLON
    9          | BREAK SEMICOLON
   10          | expression SEMICOLON
   11          | RETURN expression SEMICOLON
   12          | SEMICOLON
   13          | function_declaration
   14          | variable_declaration
   15          | enum_declaration

   16 block_statement: LCURLY statement_list RCURLY
   17                | LCURLY RCURLY

   18 statement_list: statement
   19               | statement_list statement

   20 variable_declaration: data_type variable_list SEMICOLON
   21                     | CONST data_type variable_list SEMICOLON

   22 variable_list: variable
   23              | variable_list COMMA variable

   24 variable: IDENTIFIER
   25         | IDENTIFIER ASSIGNOP assign_expression

   26 data_type: INT
   27          | FLOAT
   28          | CHAR
   29          | BOOL
   30          | STRING

   31 enum_declaration: ENUM IDENTIFIER LCURLY enum_values RCURLY SEMICOLON

   32 enum_values: IDENTIFIER
   33            | IDENTIFIER ASSIGNOP literal
   34            | enum_values COMMA IDENTIFIER
   35            | enum_values COMMA IDENTIFIER ASSIGNOP literal

   36 function_declaration: function_siganture block_statement

   37 function_siganture: function_data_type IDENTIFIER LPAREN parameter_list RPAREN

   38 function_data_type: data_type
   39                   | VOID

   40 parameter_list: /* empty */
   41               | parameter_declaration
   42               | parameter_declaration COMMA parameter_list

   43 parameter_declaration: data_type IDENTIFIER
   44                      | CONST data_type IDENTIFIER

   45 variable_declaration_list: variable_declaration
   46                          | variable_declaration_list variable_declaration

   47 if_statement: matched_if_statement
   48             | unmatched_if_statement

   49 matched_if_statement: IF LPAREN expression RPAREN matched_if_statement ELSE matched_if_statement
   50                     | block_statement

   51 unmatched_if_statement: IF LPAREN expression RPAREN block_statement
   52                       | IF LPAREN expression RPAREN matched_if_statement ELSE unmatched_if_statement

   53 switch_statement: SWITCH LPAREN expression RPAREN LCURLY case_list RCURLY

   54 case_statement: CASE expression COLON statement_list

   55 default_statement: DEFAULT COLON statement_list

   56 case_list: case_list case_statement
   57          | case_list default_statement
   58          | case_statement
   59          | default_statement

   60 iteration_statement: WHILE LPAREN expression RPAREN block_statement
   61                    | FOR LPAREN variable_declaration_list expression SEMICOLON expression RPAREN block_statement
   62                    | DO block_statement WHILE LPAREN expression RPAREN SEMICOLON

   63 function_call_statement: IDENTIFIER LPAREN function_call_expression RPAREN SEMICOLON

   64 function_call_expression: /* empty */
   65                         | expression

   66 expression: expression COMMA assign_expression
   67           | assign_expression

   68 assign_expression: IDENTIFIER ASSIGNOP assign_expression
   69                  | logical_or_expression

   70 logical_or_expression: logical_or_expression OR logical_and_expression
   71                      | logical_and_expression

   72 logical_and_expression: logical_and_expression AND equality_expression
   73                       | equality_expression

   74 equality_expression: equality_expression EQ relational_expression
   75                    | equality_expression NE relational_expression
   76                    | relational_expression

   77 relational_expression: relational_expression LT additive_expression
   78                      | relational_expression GT additive_expression
   79                      | relational_expression LE additive_expression
   80                      | relational_expression GE additive_expression
   81                      | additive_expression

   82 additive_expression: additive_expression PLUS multiplicative_expression
   83                    | additive_expression SUBTRACT multiplicative_expression
   84                    | multiplicative_expression

   85 multiplicative_expression: multiplicative_expression MULTIPLY prefix_expression
   86                          | multiplicative_expression DIVIDE prefix_expression
   87                          | prefix_expression
   88                          | postfix_expression

   89 prefix_expression: UNARYADD prefix_expression
   90                  | UNARYSUB prefix_expression
   91                  | primary_expression

   92 postfix_expression: postfix_expression UNARYADD
   93                   | postfix_expression UNARYSUB
   94                   | primary_expression

   95 primary_expression: IDENTIFIER
   96                   | literal

   97 literal: FALSE
   98        | TRUE
   99        | INT_LITERAL
  100        | FLOAT_LITERAL
  101        | CHARACTER_LITERAL


Terminals, with rules where they appear

$end (0) 0
error (256) 3
PRINTF (258)
SCANF (259)
INT (260) 26
FLOAT (261) 27
CHAR (262) 28
BOOL (263) 29
STRING (264) 30
VOID (265) 39
CONST (266) 21 44
FOR (267) 61
IF (268) 49 51 52
ELSE (269) 49 52
SWITCH (270) 53
WHILE (271) 60 62
DO (272) 62
CASE (273) 54
CONTINUE (274) 8
BREAK (275) 9
DEFAULT (276) 55
REPEAT (277)
UNTIL (278)
PLUS (279) 82
MULTIPLY (280) 85
DIVIDE (281) 86
SUBTRACT (282) 83
UNARYADD (283) 89 92
UNARYSUB (284) 90 93
NOT (285)
LE (286) 79
GE (287) 80
EQ (288) 74
NE (289) 75
GT (290) 78
LT (291) 77
AND (292) 72
OR (293) 70
ASSIGNOP (294) 25 33 35 68
SEMICOLON (295) 3 8 9 10 11 12 20 21 31 61 62 63
COLON (296) 54 55
COMMA (297) 23 34 35 42 66
LCURLY (298) 16 17 31 53
RCURLY (299) 16 17 31 53
LPAREN (300) 37 49 51 52 53 60 61 62 63
RPAREN (301) 37 49 51 52 53 60 61 62 63
ENUM (302) 31
IDENTIFIER (303) 24 25 31 32 33 34 35 37 43 44 63 68 95
RETURN (304) 11
INCLUDE (305)
END (306)
FALSE (307) 97
TRUE (308) 98
INT_LITERAL (309) 99
FLOAT_LITERAL (310) 100
CHARACTER_LITERAL (311) 101


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
program (58)
    on left: 1 2 3, on right: 0 2
statement (59)
    on left: 4 5 6 7 8 9 10 11 12 13 14 15, on right: 1 2 18 19
block_statement (60)
    on left: 16 17, on right: 36 50 51 60 61 62
statement_list (61)
    on left: 18 19, on right: 16 19 54 55
variable_declaration (62)
    on left: 20 21, on right: 14 45 46
variable_list (63)
    on left: 22 23, on right: 20 21 23
variable (64)
    on left: 24 25, on right: 22 23
data_type (65)
    on left: 26 27 28 29 30, on right: 20 21 38 43 44
enum_declaration (66)
    on left: 31, on right: 15
enum_values (67)
    on left: 32 33 34 35, on right: 31 34 35
function_declaration (68)
    on left: 36, on right: 13
function_siganture (69)
    on left: 37, on right: 36
function_data_type (70)
    on left: 38 39, on right: 37
parameter_list (71)
    on left: 40 41 42, on right: 37 42
parameter_declaration (72)
    on left: 43 44, on right: 41 42
variable_declaration_list (73)
    on left: 45 46, on right: 46 61
if_statement (74)
    on left: 47 48, on right: 4
matched_if_statement (75)
    on left: 49 50, on right: 47 49 52
unmatched_if_statement (76)
    on left: 51 52, on right: 48 52
switch_statement (77)
    on left: 53, on right: 5
case_statement (78)
    on left: 54, on right: 56 58
default_statement (79)
    on left: 55, on right: 57 59
case_list (80)
    on left: 56 57 58 59, on right: 53 56 57
iteration_statement (81)
    on left: 60 61 62, on right: 6
function_call_statement (82)
    on left: 63, on right: 7
function_call_expression (83)
    on left: 64 65, on right: 63
expression (84)
    on left: 66 67, on right: 10 11 49 51 52 53 54 60 61 62 65 66
assign_expression (85)
    on left: 68 69, on right: 25 66 67 68
logical_or_expression (86)
    on left: 70 71, on right: 69 70
logical_and_expression (87)
    on left: 72 73, on right: 70 71 72
equality_expression (88)
    on left: 74 75 76, on right: 72 73 74 75
relational_expression (89)
    on left: 77 78 79 80 81, on right: 74 75 76 77 78 79 80
additive_expression (90)
    on left: 82 83 84, on right: 77 78 79 80 81 82 83
multiplicative_expression (91)
    on left: 85 86 87 88, on right: 82 83 84 85 86
prefix_expression (92)
    on left: 89 90 91, on right: 85 86 87 89 90
postfix_expression (93)
    on left: 92 93 94, on right: 88 92 93
primary_expression (94)
    on left: 95 96, on right: 91 94
literal (95)
    on left: 97 98 99 100 101, on right: 33 35 96


state 0

    0 $accept: . program $end

    error              shift, and go to state 1
    INT                shift, and go to state 2
    FLOAT              shift, and go to state 3
    CHAR               shift, and go to state 4
    BOOL               shift, and go to state 5
    STRING             shift, and go to state 6
    VOID               shift, and go to state 7
    CONST              shift, and go to state 8
    FOR                shift, and go to state 9
    IF                 shift, and go to state 10
    SWITCH             shift, and go to state 11
    WHILE              shift, and go to state 12
    DO                 shift, and go to state 13
    CONTINUE           shift, and go to state 14
    BREAK              shift, and go to state 15
    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    SEMICOLON          shift, and go to state 18
    LCURLY             shift, and go to state 19
    ENUM               shift, and go to state 20
    IDENTIFIER         shift, and go to state 21
    RETURN             shift, and go to state 22
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    program                    go to state 28
    statement                  go to state 29
    block_statement            go to state 30
    variable_declaration       go to state 31
    data_type                  go to state 32
    enum_declaration           go to state 33
    function_declaration       go to state 34
    function_siganture         go to state 35
    function_data_type         go to state 36
    if_statement               go to state 37
    matched_if_statement       go to state 38
    unmatched_if_statement     go to state 39
    switch_statement           go to state 40
    iteration_statement        go to state 41
    function_call_statement    go to state 42
    expression                 go to state 43
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 1

    3 program: error . SEMICOLON

    SEMICOLON  shift, and go to state 55


state 2

   26 data_type: INT .

    $default  reduce using rule 26 (data_type)


state 3

   27 data_type: FLOAT .

    $default  reduce using rule 27 (data_type)


state 4

   28 data_type: CHAR .

    $default  reduce using rule 28 (data_type)


state 5

   29 data_type: BOOL .

    $default  reduce using rule 29 (data_type)


state 6

   30 data_type: STRING .

    $default  reduce using rule 30 (data_type)


state 7

   39 function_data_type: VOID .

    $default  reduce using rule 39 (function_data_type)


state 8

   21 variable_declaration: CONST . data_type variable_list SEMICOLON

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6

    data_type  go to state 56


state 9

   61 iteration_statement: FOR . LPAREN variable_declaration_list expression SEMICOLON expression RPAREN block_statement

    LPAREN  shift, and go to state 57


state 10

   49 matched_if_statement: IF . LPAREN expression RPAREN matched_if_statement ELSE matched_if_statement
   51 unmatched_if_statement: IF . LPAREN expression RPAREN block_statement
   52                       | IF . LPAREN expression RPAREN matched_if_statement ELSE unmatched_if_statement

    LPAREN  shift, and go to state 58


state 11

   53 switch_statement: SWITCH . LPAREN expression RPAREN LCURLY case_list RCURLY

    LPAREN  shift, and go to state 59


state 12

   60 iteration_statement: WHILE . LPAREN expression RPAREN block_statement

    LPAREN  shift, and go to state 60


state 13

   62 iteration_statement: DO . block_statement WHILE LPAREN expression RPAREN SEMICOLON

    LCURLY  shift, and go to state 19

    block_statement  go to state 61


state 14

    8 statement: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 62


state 15

    9 statement: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 63


state 16

   89 prefix_expression: UNARYADD . prefix_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    prefix_expression   go to state 65
    primary_expression  go to state 66
    literal             go to state 54


state 17

   90 prefix_expression: UNARYSUB . prefix_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    prefix_expression   go to state 67
    primary_expression  go to state 66
    literal             go to state 54


state 18

   12 statement: SEMICOLON .

    $default  reduce using rule 12 (statement)


state 19

   16 block_statement: LCURLY . statement_list RCURLY
   17                | LCURLY . RCURLY

    INT                shift, and go to state 2
    FLOAT              shift, and go to state 3
    CHAR               shift, and go to state 4
    BOOL               shift, and go to state 5
    STRING             shift, and go to state 6
    VOID               shift, and go to state 7
    CONST              shift, and go to state 8
    FOR                shift, and go to state 9
    IF                 shift, and go to state 10
    SWITCH             shift, and go to state 11
    WHILE              shift, and go to state 12
    DO                 shift, and go to state 13
    CONTINUE           shift, and go to state 14
    BREAK              shift, and go to state 15
    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    SEMICOLON          shift, and go to state 18
    LCURLY             shift, and go to state 19
    RCURLY             shift, and go to state 68
    ENUM               shift, and go to state 20
    IDENTIFIER         shift, and go to state 21
    RETURN             shift, and go to state 22
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    statement                  go to state 69
    block_statement            go to state 30
    statement_list             go to state 70
    variable_declaration       go to state 31
    data_type                  go to state 32
    enum_declaration           go to state 33
    function_declaration       go to state 34
    function_siganture         go to state 35
    function_data_type         go to state 36
    if_statement               go to state 37
    matched_if_statement       go to state 38
    unmatched_if_statement     go to state 39
    switch_statement           go to state 40
    iteration_statement        go to state 41
    function_call_statement    go to state 42
    expression                 go to state 43
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 20

   31 enum_declaration: ENUM . IDENTIFIER LCURLY enum_values RCURLY SEMICOLON

    IDENTIFIER  shift, and go to state 71


state 21

   63 function_call_statement: IDENTIFIER . LPAREN function_call_expression RPAREN SEMICOLON
   68 assign_expression: IDENTIFIER . ASSIGNOP assign_expression
   95 primary_expression: IDENTIFIER .

    ASSIGNOP  shift, and go to state 72
    LPAREN    shift, and go to state 73

    $default  reduce using rule 95 (primary_expression)


state 22

   11 statement: RETURN . expression SEMICOLON

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    expression                 go to state 75
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 23

   97 literal: FALSE .

    $default  reduce using rule 97 (literal)


state 24

   98 literal: TRUE .

    $default  reduce using rule 98 (literal)


state 25

   99 literal: INT_LITERAL .

    $default  reduce using rule 99 (literal)


state 26

  100 literal: FLOAT_LITERAL .

    $default  reduce using rule 100 (literal)


state 27

  101 literal: CHARACTER_LITERAL .

    $default  reduce using rule 101 (literal)


state 28

    0 $accept: program . $end
    2 program: program . statement

    $end               shift, and go to state 76
    INT                shift, and go to state 2
    FLOAT              shift, and go to state 3
    CHAR               shift, and go to state 4
    BOOL               shift, and go to state 5
    STRING             shift, and go to state 6
    VOID               shift, and go to state 7
    CONST              shift, and go to state 8
    FOR                shift, and go to state 9
    IF                 shift, and go to state 10
    SWITCH             shift, and go to state 11
    WHILE              shift, and go to state 12
    DO                 shift, and go to state 13
    CONTINUE           shift, and go to state 14
    BREAK              shift, and go to state 15
    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    SEMICOLON          shift, and go to state 18
    LCURLY             shift, and go to state 19
    ENUM               shift, and go to state 20
    IDENTIFIER         shift, and go to state 21
    RETURN             shift, and go to state 22
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    statement                  go to state 77
    block_statement            go to state 30
    variable_declaration       go to state 31
    data_type                  go to state 32
    enum_declaration           go to state 33
    function_declaration       go to state 34
    function_siganture         go to state 35
    function_data_type         go to state 36
    if_statement               go to state 37
    matched_if_statement       go to state 38
    unmatched_if_statement     go to state 39
    switch_statement           go to state 40
    iteration_statement        go to state 41
    function_call_statement    go to state 42
    expression                 go to state 43
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 29

    1 program: statement .

    $default  reduce using rule 1 (program)


state 30

   50 matched_if_statement: block_statement .

    $default  reduce using rule 50 (matched_if_statement)


state 31

   14 statement: variable_declaration .

    $default  reduce using rule 14 (statement)


state 32

   20 variable_declaration: data_type . variable_list SEMICOLON
   38 function_data_type: data_type .

    IDENTIFIER  shift, and go to state 78

    IDENTIFIER  [reduce using rule 38 (function_data_type)]

    variable_list  go to state 79
    variable       go to state 80


state 33

   15 statement: enum_declaration .

    $default  reduce using rule 15 (statement)


state 34

   13 statement: function_declaration .

    $default  reduce using rule 13 (statement)


state 35

   36 function_declaration: function_siganture . block_statement

    LCURLY  shift, and go to state 19

    block_statement  go to state 81


state 36

   37 function_siganture: function_data_type . IDENTIFIER LPAREN parameter_list RPAREN

    IDENTIFIER  shift, and go to state 82


state 37

    4 statement: if_statement .

    $default  reduce using rule 4 (statement)


state 38

   47 if_statement: matched_if_statement .

    $default  reduce using rule 47 (if_statement)


state 39

   48 if_statement: unmatched_if_statement .

    $default  reduce using rule 48 (if_statement)


state 40

    5 statement: switch_statement .

    $default  reduce using rule 5 (statement)


state 41

    6 statement: iteration_statement .

    $default  reduce using rule 6 (statement)


state 42

    7 statement: function_call_statement .

    $default  reduce using rule 7 (statement)


state 43

   10 statement: expression . SEMICOLON
   66 expression: expression . COMMA assign_expression

    SEMICOLON  shift, and go to state 83
    COMMA      shift, and go to state 84


state 44

   67 expression: assign_expression .

    $default  reduce using rule 67 (expression)


state 45

   69 assign_expression: logical_or_expression .
   70 logical_or_expression: logical_or_expression . OR logical_and_expression

    OR  shift, and go to state 85

    $default  reduce using rule 69 (assign_expression)


state 46

   71 logical_or_expression: logical_and_expression .
   72 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 86

    $default  reduce using rule 71 (logical_or_expression)


state 47

   73 logical_and_expression: equality_expression .
   74 equality_expression: equality_expression . EQ relational_expression
   75                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 87
    NE  shift, and go to state 88

    $default  reduce using rule 73 (logical_and_expression)


state 48

   76 equality_expression: relational_expression .
   77 relational_expression: relational_expression . LT additive_expression
   78                      | relational_expression . GT additive_expression
   79                      | relational_expression . LE additive_expression
   80                      | relational_expression . GE additive_expression

    LE  shift, and go to state 89
    GE  shift, and go to state 90
    GT  shift, and go to state 91
    LT  shift, and go to state 92

    $default  reduce using rule 76 (equality_expression)


state 49

   81 relational_expression: additive_expression .
   82 additive_expression: additive_expression . PLUS multiplicative_expression
   83                    | additive_expression . SUBTRACT multiplicative_expression

    PLUS      shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 81 (relational_expression)


state 50

   84 additive_expression: multiplicative_expression .
   85 multiplicative_expression: multiplicative_expression . MULTIPLY prefix_expression
   86                          | multiplicative_expression . DIVIDE prefix_expression

    MULTIPLY  shift, and go to state 95
    DIVIDE    shift, and go to state 96

    $default  reduce using rule 84 (additive_expression)


state 51

   87 multiplicative_expression: prefix_expression .

    $default  reduce using rule 87 (multiplicative_expression)


state 52

   88 multiplicative_expression: postfix_expression .
   92 postfix_expression: postfix_expression . UNARYADD
   93                   | postfix_expression . UNARYSUB

    UNARYADD  shift, and go to state 97
    UNARYSUB  shift, and go to state 98

    $default  reduce using rule 88 (multiplicative_expression)


state 53

   91 prefix_expression: primary_expression .
   94 postfix_expression: primary_expression .

    PLUS       reduce using rule 91 (prefix_expression)
    PLUS       [reduce using rule 94 (postfix_expression)]
    MULTIPLY   reduce using rule 91 (prefix_expression)
    MULTIPLY   [reduce using rule 94 (postfix_expression)]
    DIVIDE     reduce using rule 91 (prefix_expression)
    DIVIDE     [reduce using rule 94 (postfix_expression)]
    SUBTRACT   reduce using rule 91 (prefix_expression)
    SUBTRACT   [reduce using rule 94 (postfix_expression)]
    UNARYADD   reduce using rule 94 (postfix_expression)
    UNARYSUB   reduce using rule 94 (postfix_expression)
    LE         reduce using rule 91 (prefix_expression)
    LE         [reduce using rule 94 (postfix_expression)]
    GE         reduce using rule 91 (prefix_expression)
    GE         [reduce using rule 94 (postfix_expression)]
    EQ         reduce using rule 91 (prefix_expression)
    EQ         [reduce using rule 94 (postfix_expression)]
    NE         reduce using rule 91 (prefix_expression)
    NE         [reduce using rule 94 (postfix_expression)]
    GT         reduce using rule 91 (prefix_expression)
    GT         [reduce using rule 94 (postfix_expression)]
    LT         reduce using rule 91 (prefix_expression)
    LT         [reduce using rule 94 (postfix_expression)]
    AND        reduce using rule 91 (prefix_expression)
    AND        [reduce using rule 94 (postfix_expression)]
    OR         reduce using rule 91 (prefix_expression)
    OR         [reduce using rule 94 (postfix_expression)]
    SEMICOLON  reduce using rule 91 (prefix_expression)
    SEMICOLON  [reduce using rule 94 (postfix_expression)]
    COLON      reduce using rule 91 (prefix_expression)
    COLON      [reduce using rule 94 (postfix_expression)]
    COMMA      reduce using rule 91 (prefix_expression)
    COMMA      [reduce using rule 94 (postfix_expression)]
    RPAREN     reduce using rule 91 (prefix_expression)
    RPAREN     [reduce using rule 94 (postfix_expression)]
    $default   reduce using rule 91 (prefix_expression)


state 54

   96 primary_expression: literal .

    $default  reduce using rule 96 (primary_expression)


state 55

    3 program: error SEMICOLON .

    $default  reduce using rule 3 (program)


state 56

   21 variable_declaration: CONST data_type . variable_list SEMICOLON

    IDENTIFIER  shift, and go to state 78

    variable_list  go to state 99
    variable       go to state 80


state 57

   61 iteration_statement: FOR LPAREN . variable_declaration_list expression SEMICOLON expression RPAREN block_statement

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6
    CONST   shift, and go to state 8

    variable_declaration       go to state 100
    data_type                  go to state 101
    variable_declaration_list  go to state 102


state 58

   49 matched_if_statement: IF LPAREN . expression RPAREN matched_if_statement ELSE matched_if_statement
   51 unmatched_if_statement: IF LPAREN . expression RPAREN block_statement
   52                       | IF LPAREN . expression RPAREN matched_if_statement ELSE unmatched_if_statement

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    expression                 go to state 103
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 59

   53 switch_statement: SWITCH LPAREN . expression RPAREN LCURLY case_list RCURLY

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    expression                 go to state 104
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 60

   60 iteration_statement: WHILE LPAREN . expression RPAREN block_statement

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    expression                 go to state 105
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 61

   62 iteration_statement: DO block_statement . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE  shift, and go to state 106


state 62

    8 statement: CONTINUE SEMICOLON .

    $default  reduce using rule 8 (statement)


state 63

    9 statement: BREAK SEMICOLON .

    $default  reduce using rule 9 (statement)


state 64

   95 primary_expression: IDENTIFIER .

    $default  reduce using rule 95 (primary_expression)


state 65

   89 prefix_expression: UNARYADD prefix_expression .

    $default  reduce using rule 89 (prefix_expression)


state 66

   91 prefix_expression: primary_expression .

    $default  reduce using rule 91 (prefix_expression)


state 67

   90 prefix_expression: UNARYSUB prefix_expression .

    $default  reduce using rule 90 (prefix_expression)


state 68

   17 block_statement: LCURLY RCURLY .

    $default  reduce using rule 17 (block_statement)


state 69

   18 statement_list: statement .

    $default  reduce using rule 18 (statement_list)


state 70

   16 block_statement: LCURLY statement_list . RCURLY
   19 statement_list: statement_list . statement

    INT                shift, and go to state 2
    FLOAT              shift, and go to state 3
    CHAR               shift, and go to state 4
    BOOL               shift, and go to state 5
    STRING             shift, and go to state 6
    VOID               shift, and go to state 7
    CONST              shift, and go to state 8
    FOR                shift, and go to state 9
    IF                 shift, and go to state 10
    SWITCH             shift, and go to state 11
    WHILE              shift, and go to state 12
    DO                 shift, and go to state 13
    CONTINUE           shift, and go to state 14
    BREAK              shift, and go to state 15
    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    SEMICOLON          shift, and go to state 18
    LCURLY             shift, and go to state 19
    RCURLY             shift, and go to state 107
    ENUM               shift, and go to state 20
    IDENTIFIER         shift, and go to state 21
    RETURN             shift, and go to state 22
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    statement                  go to state 108
    block_statement            go to state 30
    variable_declaration       go to state 31
    data_type                  go to state 32
    enum_declaration           go to state 33
    function_declaration       go to state 34
    function_siganture         go to state 35
    function_data_type         go to state 36
    if_statement               go to state 37
    matched_if_statement       go to state 38
    unmatched_if_statement     go to state 39
    switch_statement           go to state 40
    iteration_statement        go to state 41
    function_call_statement    go to state 42
    expression                 go to state 43
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 71

   31 enum_declaration: ENUM IDENTIFIER . LCURLY enum_values RCURLY SEMICOLON

    LCURLY  shift, and go to state 109


state 72

   68 assign_expression: IDENTIFIER ASSIGNOP . assign_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    assign_expression          go to state 110
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 73

   63 function_call_statement: IDENTIFIER LPAREN . function_call_expression RPAREN SEMICOLON

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    $default  reduce using rule 64 (function_call_expression)

    function_call_expression   go to state 111
    expression                 go to state 112
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 74

   68 assign_expression: IDENTIFIER . ASSIGNOP assign_expression
   95 primary_expression: IDENTIFIER .

    ASSIGNOP  shift, and go to state 72

    $default  reduce using rule 95 (primary_expression)


state 75

   11 statement: RETURN expression . SEMICOLON
   66 expression: expression . COMMA assign_expression

    SEMICOLON  shift, and go to state 113
    COMMA      shift, and go to state 84


state 76

    0 $accept: program $end .

    $default  accept


state 77

    2 program: program statement .

    $default  reduce using rule 2 (program)


state 78

   24 variable: IDENTIFIER .
   25         | IDENTIFIER . ASSIGNOP assign_expression

    ASSIGNOP  shift, and go to state 114

    $default  reduce using rule 24 (variable)


state 79

   20 variable_declaration: data_type variable_list . SEMICOLON
   23 variable_list: variable_list . COMMA variable

    SEMICOLON  shift, and go to state 115
    COMMA      shift, and go to state 116


state 80

   22 variable_list: variable .

    $default  reduce using rule 22 (variable_list)


state 81

   36 function_declaration: function_siganture block_statement .

    $default  reduce using rule 36 (function_declaration)


state 82

   37 function_siganture: function_data_type IDENTIFIER . LPAREN parameter_list RPAREN

    LPAREN  shift, and go to state 117


state 83

   10 statement: expression SEMICOLON .

    $default  reduce using rule 10 (statement)


state 84

   66 expression: expression COMMA . assign_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    assign_expression          go to state 118
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 85

   70 logical_or_expression: logical_or_expression OR . logical_and_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    logical_and_expression     go to state 119
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 86

   72 logical_and_expression: logical_and_expression AND . equality_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    equality_expression        go to state 120
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 87

   74 equality_expression: equality_expression EQ . relational_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    relational_expression      go to state 121
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 88

   75 equality_expression: equality_expression NE . relational_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    relational_expression      go to state 122
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 89

   79 relational_expression: relational_expression LE . additive_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    additive_expression        go to state 123
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 90

   80 relational_expression: relational_expression GE . additive_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    additive_expression        go to state 124
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 91

   78 relational_expression: relational_expression GT . additive_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    additive_expression        go to state 125
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 92

   77 relational_expression: relational_expression LT . additive_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    additive_expression        go to state 126
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 93

   82 additive_expression: additive_expression PLUS . multiplicative_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    multiplicative_expression  go to state 127
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 94

   83 additive_expression: additive_expression SUBTRACT . multiplicative_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    multiplicative_expression  go to state 128
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 95

   85 multiplicative_expression: multiplicative_expression MULTIPLY . prefix_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    prefix_expression   go to state 129
    primary_expression  go to state 66
    literal             go to state 54


state 96

   86 multiplicative_expression: multiplicative_expression DIVIDE . prefix_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 64
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    prefix_expression   go to state 130
    primary_expression  go to state 66
    literal             go to state 54


state 97

   92 postfix_expression: postfix_expression UNARYADD .

    $default  reduce using rule 92 (postfix_expression)


state 98

   93 postfix_expression: postfix_expression UNARYSUB .

    $default  reduce using rule 93 (postfix_expression)


state 99

   21 variable_declaration: CONST data_type variable_list . SEMICOLON
   23 variable_list: variable_list . COMMA variable

    SEMICOLON  shift, and go to state 131
    COMMA      shift, and go to state 116


state 100

   45 variable_declaration_list: variable_declaration .

    $default  reduce using rule 45 (variable_declaration_list)


state 101

   20 variable_declaration: data_type . variable_list SEMICOLON

    IDENTIFIER  shift, and go to state 78

    variable_list  go to state 79
    variable       go to state 80


state 102

   46 variable_declaration_list: variable_declaration_list . variable_declaration
   61 iteration_statement: FOR LPAREN variable_declaration_list . expression SEMICOLON expression RPAREN block_statement

    INT                shift, and go to state 2
    FLOAT              shift, and go to state 3
    CHAR               shift, and go to state 4
    BOOL               shift, and go to state 5
    STRING             shift, and go to state 6
    CONST              shift, and go to state 8
    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    variable_declaration       go to state 132
    data_type                  go to state 101
    expression                 go to state 133
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 103

   49 matched_if_statement: IF LPAREN expression . RPAREN matched_if_statement ELSE matched_if_statement
   51 unmatched_if_statement: IF LPAREN expression . RPAREN block_statement
   52                       | IF LPAREN expression . RPAREN matched_if_statement ELSE unmatched_if_statement
   66 expression: expression . COMMA assign_expression

    COMMA   shift, and go to state 84
    RPAREN  shift, and go to state 134


state 104

   53 switch_statement: SWITCH LPAREN expression . RPAREN LCURLY case_list RCURLY
   66 expression: expression . COMMA assign_expression

    COMMA   shift, and go to state 84
    RPAREN  shift, and go to state 135


state 105

   60 iteration_statement: WHILE LPAREN expression . RPAREN block_statement
   66 expression: expression . COMMA assign_expression

    COMMA   shift, and go to state 84
    RPAREN  shift, and go to state 136


state 106

   62 iteration_statement: DO block_statement WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN  shift, and go to state 137


state 107

   16 block_statement: LCURLY statement_list RCURLY .

    $default  reduce using rule 16 (block_statement)


state 108

   19 statement_list: statement_list statement .

    $default  reduce using rule 19 (statement_list)


state 109

   31 enum_declaration: ENUM IDENTIFIER LCURLY . enum_values RCURLY SEMICOLON

    IDENTIFIER  shift, and go to state 138

    enum_values  go to state 139


state 110

   68 assign_expression: IDENTIFIER ASSIGNOP assign_expression .

    $default  reduce using rule 68 (assign_expression)


state 111

   63 function_call_statement: IDENTIFIER LPAREN function_call_expression . RPAREN SEMICOLON

    RPAREN  shift, and go to state 140


state 112

   65 function_call_expression: expression .
   66 expression: expression . COMMA assign_expression

    COMMA  shift, and go to state 84

    $default  reduce using rule 65 (function_call_expression)


state 113

   11 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 11 (statement)


state 114

   25 variable: IDENTIFIER ASSIGNOP . assign_expression

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    assign_expression          go to state 141
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 115

   20 variable_declaration: data_type variable_list SEMICOLON .

    $default  reduce using rule 20 (variable_declaration)


state 116

   23 variable_list: variable_list COMMA . variable

    IDENTIFIER  shift, and go to state 78

    variable  go to state 142


state 117

   37 function_siganture: function_data_type IDENTIFIER LPAREN . parameter_list RPAREN

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6
    CONST   shift, and go to state 143

    $default  reduce using rule 40 (parameter_list)

    data_type              go to state 144
    parameter_list         go to state 145
    parameter_declaration  go to state 146


state 118

   66 expression: expression COMMA assign_expression .

    $default  reduce using rule 66 (expression)


state 119

   70 logical_or_expression: logical_or_expression OR logical_and_expression .
   72 logical_and_expression: logical_and_expression . AND equality_expression

    AND  shift, and go to state 86

    $default  reduce using rule 70 (logical_or_expression)


state 120

   72 logical_and_expression: logical_and_expression AND equality_expression .
   74 equality_expression: equality_expression . EQ relational_expression
   75                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 87
    NE  shift, and go to state 88

    $default  reduce using rule 72 (logical_and_expression)


state 121

   74 equality_expression: equality_expression EQ relational_expression .
   77 relational_expression: relational_expression . LT additive_expression
   78                      | relational_expression . GT additive_expression
   79                      | relational_expression . LE additive_expression
   80                      | relational_expression . GE additive_expression

    LE  shift, and go to state 89
    GE  shift, and go to state 90
    GT  shift, and go to state 91
    LT  shift, and go to state 92

    $default  reduce using rule 74 (equality_expression)


state 122

   75 equality_expression: equality_expression NE relational_expression .
   77 relational_expression: relational_expression . LT additive_expression
   78                      | relational_expression . GT additive_expression
   79                      | relational_expression . LE additive_expression
   80                      | relational_expression . GE additive_expression

    LE  shift, and go to state 89
    GE  shift, and go to state 90
    GT  shift, and go to state 91
    LT  shift, and go to state 92

    $default  reduce using rule 75 (equality_expression)


state 123

   79 relational_expression: relational_expression LE additive_expression .
   82 additive_expression: additive_expression . PLUS multiplicative_expression
   83                    | additive_expression . SUBTRACT multiplicative_expression

    PLUS      shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 79 (relational_expression)


state 124

   80 relational_expression: relational_expression GE additive_expression .
   82 additive_expression: additive_expression . PLUS multiplicative_expression
   83                    | additive_expression . SUBTRACT multiplicative_expression

    PLUS      shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 80 (relational_expression)


state 125

   78 relational_expression: relational_expression GT additive_expression .
   82 additive_expression: additive_expression . PLUS multiplicative_expression
   83                    | additive_expression . SUBTRACT multiplicative_expression

    PLUS      shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 78 (relational_expression)


state 126

   77 relational_expression: relational_expression LT additive_expression .
   82 additive_expression: additive_expression . PLUS multiplicative_expression
   83                    | additive_expression . SUBTRACT multiplicative_expression

    PLUS      shift, and go to state 93
    SUBTRACT  shift, and go to state 94

    $default  reduce using rule 77 (relational_expression)


state 127

   82 additive_expression: additive_expression PLUS multiplicative_expression .
   85 multiplicative_expression: multiplicative_expression . MULTIPLY prefix_expression
   86                          | multiplicative_expression . DIVIDE prefix_expression

    MULTIPLY  shift, and go to state 95
    DIVIDE    shift, and go to state 96

    $default  reduce using rule 82 (additive_expression)


state 128

   83 additive_expression: additive_expression SUBTRACT multiplicative_expression .
   85 multiplicative_expression: multiplicative_expression . MULTIPLY prefix_expression
   86                          | multiplicative_expression . DIVIDE prefix_expression

    MULTIPLY  shift, and go to state 95
    DIVIDE    shift, and go to state 96

    $default  reduce using rule 83 (additive_expression)


state 129

   85 multiplicative_expression: multiplicative_expression MULTIPLY prefix_expression .

    $default  reduce using rule 85 (multiplicative_expression)


state 130

   86 multiplicative_expression: multiplicative_expression DIVIDE prefix_expression .

    $default  reduce using rule 86 (multiplicative_expression)


state 131

   21 variable_declaration: CONST data_type variable_list SEMICOLON .

    $default  reduce using rule 21 (variable_declaration)


state 132

   46 variable_declaration_list: variable_declaration_list variable_declaration .

    $default  reduce using rule 46 (variable_declaration_list)


state 133

   61 iteration_statement: FOR LPAREN variable_declaration_list expression . SEMICOLON expression RPAREN block_statement
   66 expression: expression . COMMA assign_expression

    SEMICOLON  shift, and go to state 147
    COMMA      shift, and go to state 84


state 134

   49 matched_if_statement: IF LPAREN expression RPAREN . matched_if_statement ELSE matched_if_statement
   51 unmatched_if_statement: IF LPAREN expression RPAREN . block_statement
   52                       | IF LPAREN expression RPAREN . matched_if_statement ELSE unmatched_if_statement

    IF      shift, and go to state 148
    LCURLY  shift, and go to state 19

    block_statement       go to state 149
    matched_if_statement  go to state 150


state 135

   53 switch_statement: SWITCH LPAREN expression RPAREN . LCURLY case_list RCURLY

    LCURLY  shift, and go to state 151


state 136

   60 iteration_statement: WHILE LPAREN expression RPAREN . block_statement

    LCURLY  shift, and go to state 19

    block_statement  go to state 152


state 137

   62 iteration_statement: DO block_statement WHILE LPAREN . expression RPAREN SEMICOLON

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    expression                 go to state 153
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 138

   32 enum_values: IDENTIFIER .
   33            | IDENTIFIER . ASSIGNOP literal

    ASSIGNOP  shift, and go to state 154

    $default  reduce using rule 32 (enum_values)


state 139

   31 enum_declaration: ENUM IDENTIFIER LCURLY enum_values . RCURLY SEMICOLON
   34 enum_values: enum_values . COMMA IDENTIFIER
   35            | enum_values . COMMA IDENTIFIER ASSIGNOP literal

    COMMA   shift, and go to state 155
    RCURLY  shift, and go to state 156


state 140

   63 function_call_statement: IDENTIFIER LPAREN function_call_expression RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 157


state 141

   25 variable: IDENTIFIER ASSIGNOP assign_expression .

    $default  reduce using rule 25 (variable)


state 142

   23 variable_list: variable_list COMMA variable .

    $default  reduce using rule 23 (variable_list)


state 143

   44 parameter_declaration: CONST . data_type IDENTIFIER

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6

    data_type  go to state 158


state 144

   43 parameter_declaration: data_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 159


state 145

   37 function_siganture: function_data_type IDENTIFIER LPAREN parameter_list . RPAREN

    RPAREN  shift, and go to state 160


state 146

   41 parameter_list: parameter_declaration .
   42               | parameter_declaration . COMMA parameter_list

    COMMA  shift, and go to state 161

    $default  reduce using rule 41 (parameter_list)


state 147

   61 iteration_statement: FOR LPAREN variable_declaration_list expression SEMICOLON . expression RPAREN block_statement

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    expression                 go to state 162
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 148

   49 matched_if_statement: IF . LPAREN expression RPAREN matched_if_statement ELSE matched_if_statement

    LPAREN  shift, and go to state 163


state 149

   50 matched_if_statement: block_statement .
   51 unmatched_if_statement: IF LPAREN expression RPAREN block_statement .

    ELSE      reduce using rule 50 (matched_if_statement)
    $default  reduce using rule 51 (unmatched_if_statement)


state 150

   49 matched_if_statement: IF LPAREN expression RPAREN matched_if_statement . ELSE matched_if_statement
   52 unmatched_if_statement: IF LPAREN expression RPAREN matched_if_statement . ELSE unmatched_if_statement

    ELSE  shift, and go to state 164


state 151

   53 switch_statement: SWITCH LPAREN expression RPAREN LCURLY . case_list RCURLY

    CASE     shift, and go to state 165
    DEFAULT  shift, and go to state 166

    case_statement     go to state 167
    default_statement  go to state 168
    case_list          go to state 169


state 152

   60 iteration_statement: WHILE LPAREN expression RPAREN block_statement .

    $default  reduce using rule 60 (iteration_statement)


state 153

   62 iteration_statement: DO block_statement WHILE LPAREN expression . RPAREN SEMICOLON
   66 expression: expression . COMMA assign_expression

    COMMA   shift, and go to state 84
    RPAREN  shift, and go to state 170


state 154

   33 enum_values: IDENTIFIER ASSIGNOP . literal

    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    literal  go to state 171


state 155

   34 enum_values: enum_values COMMA . IDENTIFIER
   35            | enum_values COMMA . IDENTIFIER ASSIGNOP literal

    IDENTIFIER  shift, and go to state 172


state 156

   31 enum_declaration: ENUM IDENTIFIER LCURLY enum_values RCURLY . SEMICOLON

    SEMICOLON  shift, and go to state 173


state 157

   63 function_call_statement: IDENTIFIER LPAREN function_call_expression RPAREN SEMICOLON .

    $default  reduce using rule 63 (function_call_statement)


state 158

   44 parameter_declaration: CONST data_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 174


state 159

   43 parameter_declaration: data_type IDENTIFIER .

    $default  reduce using rule 43 (parameter_declaration)


state 160

   37 function_siganture: function_data_type IDENTIFIER LPAREN parameter_list RPAREN .

    $default  reduce using rule 37 (function_siganture)


state 161

   42 parameter_list: parameter_declaration COMMA . parameter_list

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    CHAR    shift, and go to state 4
    BOOL    shift, and go to state 5
    STRING  shift, and go to state 6
    CONST   shift, and go to state 143

    $default  reduce using rule 40 (parameter_list)

    data_type              go to state 144
    parameter_list         go to state 175
    parameter_declaration  go to state 146


state 162

   61 iteration_statement: FOR LPAREN variable_declaration_list expression SEMICOLON expression . RPAREN block_statement
   66 expression: expression . COMMA assign_expression

    COMMA   shift, and go to state 84
    RPAREN  shift, and go to state 176


state 163

   49 matched_if_statement: IF LPAREN . expression RPAREN matched_if_statement ELSE matched_if_statement

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    expression                 go to state 177
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 164

   49 matched_if_statement: IF LPAREN expression RPAREN matched_if_statement ELSE . matched_if_statement
   52 unmatched_if_statement: IF LPAREN expression RPAREN matched_if_statement ELSE . unmatched_if_statement

    IF      shift, and go to state 10
    LCURLY  shift, and go to state 19

    block_statement         go to state 30
    matched_if_statement    go to state 178
    unmatched_if_statement  go to state 179


state 165

   54 case_statement: CASE . expression COLON statement_list

    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    IDENTIFIER         shift, and go to state 74
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    expression                 go to state 180
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 166

   55 default_statement: DEFAULT . COLON statement_list

    COLON  shift, and go to state 181


state 167

   58 case_list: case_statement .

    $default  reduce using rule 58 (case_list)


state 168

   59 case_list: default_statement .

    $default  reduce using rule 59 (case_list)


state 169

   53 switch_statement: SWITCH LPAREN expression RPAREN LCURLY case_list . RCURLY
   56 case_list: case_list . case_statement
   57          | case_list . default_statement

    CASE     shift, and go to state 165
    DEFAULT  shift, and go to state 166
    RCURLY   shift, and go to state 182

    case_statement     go to state 183
    default_statement  go to state 184


state 170

   62 iteration_statement: DO block_statement WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 185


state 171

   33 enum_values: IDENTIFIER ASSIGNOP literal .

    $default  reduce using rule 33 (enum_values)


state 172

   34 enum_values: enum_values COMMA IDENTIFIER .
   35            | enum_values COMMA IDENTIFIER . ASSIGNOP literal

    ASSIGNOP  shift, and go to state 186

    $default  reduce using rule 34 (enum_values)


state 173

   31 enum_declaration: ENUM IDENTIFIER LCURLY enum_values RCURLY SEMICOLON .

    $default  reduce using rule 31 (enum_declaration)


state 174

   44 parameter_declaration: CONST data_type IDENTIFIER .

    $default  reduce using rule 44 (parameter_declaration)


state 175

   42 parameter_list: parameter_declaration COMMA parameter_list .

    $default  reduce using rule 42 (parameter_list)


state 176

   61 iteration_statement: FOR LPAREN variable_declaration_list expression SEMICOLON expression RPAREN . block_statement

    LCURLY  shift, and go to state 19

    block_statement  go to state 187


state 177

   49 matched_if_statement: IF LPAREN expression . RPAREN matched_if_statement ELSE matched_if_statement
   66 expression: expression . COMMA assign_expression

    COMMA   shift, and go to state 84
    RPAREN  shift, and go to state 188


state 178

   49 matched_if_statement: IF LPAREN expression RPAREN matched_if_statement ELSE matched_if_statement .

    $default  reduce using rule 49 (matched_if_statement)


state 179

   52 unmatched_if_statement: IF LPAREN expression RPAREN matched_if_statement ELSE unmatched_if_statement .

    $default  reduce using rule 52 (unmatched_if_statement)


state 180

   54 case_statement: CASE expression . COLON statement_list
   66 expression: expression . COMMA assign_expression

    COLON  shift, and go to state 189
    COMMA  shift, and go to state 84


state 181

   55 default_statement: DEFAULT COLON . statement_list

    INT                shift, and go to state 2
    FLOAT              shift, and go to state 3
    CHAR               shift, and go to state 4
    BOOL               shift, and go to state 5
    STRING             shift, and go to state 6
    VOID               shift, and go to state 7
    CONST              shift, and go to state 8
    FOR                shift, and go to state 9
    IF                 shift, and go to state 10
    SWITCH             shift, and go to state 11
    WHILE              shift, and go to state 12
    DO                 shift, and go to state 13
    CONTINUE           shift, and go to state 14
    BREAK              shift, and go to state 15
    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    SEMICOLON          shift, and go to state 18
    LCURLY             shift, and go to state 19
    ENUM               shift, and go to state 20
    IDENTIFIER         shift, and go to state 21
    RETURN             shift, and go to state 22
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    statement                  go to state 69
    block_statement            go to state 30
    statement_list             go to state 190
    variable_declaration       go to state 31
    data_type                  go to state 32
    enum_declaration           go to state 33
    function_declaration       go to state 34
    function_siganture         go to state 35
    function_data_type         go to state 36
    if_statement               go to state 37
    matched_if_statement       go to state 38
    unmatched_if_statement     go to state 39
    switch_statement           go to state 40
    iteration_statement        go to state 41
    function_call_statement    go to state 42
    expression                 go to state 43
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 182

   53 switch_statement: SWITCH LPAREN expression RPAREN LCURLY case_list RCURLY .

    $default  reduce using rule 53 (switch_statement)


state 183

   56 case_list: case_list case_statement .

    $default  reduce using rule 56 (case_list)


state 184

   57 case_list: case_list default_statement .

    $default  reduce using rule 57 (case_list)


state 185

   62 iteration_statement: DO block_statement WHILE LPAREN expression RPAREN SEMICOLON .

    $default  reduce using rule 62 (iteration_statement)


state 186

   35 enum_values: enum_values COMMA IDENTIFIER ASSIGNOP . literal

    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    literal  go to state 191


state 187

   61 iteration_statement: FOR LPAREN variable_declaration_list expression SEMICOLON expression RPAREN block_statement .

    $default  reduce using rule 61 (iteration_statement)


state 188

   49 matched_if_statement: IF LPAREN expression RPAREN . matched_if_statement ELSE matched_if_statement

    IF      shift, and go to state 148
    LCURLY  shift, and go to state 19

    block_statement       go to state 30
    matched_if_statement  go to state 192


state 189

   54 case_statement: CASE expression COLON . statement_list

    INT                shift, and go to state 2
    FLOAT              shift, and go to state 3
    CHAR               shift, and go to state 4
    BOOL               shift, and go to state 5
    STRING             shift, and go to state 6
    VOID               shift, and go to state 7
    CONST              shift, and go to state 8
    FOR                shift, and go to state 9
    IF                 shift, and go to state 10
    SWITCH             shift, and go to state 11
    WHILE              shift, and go to state 12
    DO                 shift, and go to state 13
    CONTINUE           shift, and go to state 14
    BREAK              shift, and go to state 15
    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    SEMICOLON          shift, and go to state 18
    LCURLY             shift, and go to state 19
    ENUM               shift, and go to state 20
    IDENTIFIER         shift, and go to state 21
    RETURN             shift, and go to state 22
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    statement                  go to state 69
    block_statement            go to state 30
    statement_list             go to state 193
    variable_declaration       go to state 31
    data_type                  go to state 32
    enum_declaration           go to state 33
    function_declaration       go to state 34
    function_siganture         go to state 35
    function_data_type         go to state 36
    if_statement               go to state 37
    matched_if_statement       go to state 38
    unmatched_if_statement     go to state 39
    switch_statement           go to state 40
    iteration_statement        go to state 41
    function_call_statement    go to state 42
    expression                 go to state 43
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 190

   19 statement_list: statement_list . statement
   55 default_statement: DEFAULT COLON statement_list .

    INT                shift, and go to state 2
    FLOAT              shift, and go to state 3
    CHAR               shift, and go to state 4
    BOOL               shift, and go to state 5
    STRING             shift, and go to state 6
    VOID               shift, and go to state 7
    CONST              shift, and go to state 8
    FOR                shift, and go to state 9
    IF                 shift, and go to state 10
    SWITCH             shift, and go to state 11
    WHILE              shift, and go to state 12
    DO                 shift, and go to state 13
    CONTINUE           shift, and go to state 14
    BREAK              shift, and go to state 15
    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    SEMICOLON          shift, and go to state 18
    LCURLY             shift, and go to state 19
    ENUM               shift, and go to state 20
    IDENTIFIER         shift, and go to state 21
    RETURN             shift, and go to state 22
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    $default  reduce using rule 55 (default_statement)

    statement                  go to state 108
    block_statement            go to state 30
    variable_declaration       go to state 31
    data_type                  go to state 32
    enum_declaration           go to state 33
    function_declaration       go to state 34
    function_siganture         go to state 35
    function_data_type         go to state 36
    if_statement               go to state 37
    matched_if_statement       go to state 38
    unmatched_if_statement     go to state 39
    switch_statement           go to state 40
    iteration_statement        go to state 41
    function_call_statement    go to state 42
    expression                 go to state 43
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 191

   35 enum_values: enum_values COMMA IDENTIFIER ASSIGNOP literal .

    $default  reduce using rule 35 (enum_values)


state 192

   49 matched_if_statement: IF LPAREN expression RPAREN matched_if_statement . ELSE matched_if_statement

    ELSE  shift, and go to state 194


state 193

   19 statement_list: statement_list . statement
   54 case_statement: CASE expression COLON statement_list .

    INT                shift, and go to state 2
    FLOAT              shift, and go to state 3
    CHAR               shift, and go to state 4
    BOOL               shift, and go to state 5
    STRING             shift, and go to state 6
    VOID               shift, and go to state 7
    CONST              shift, and go to state 8
    FOR                shift, and go to state 9
    IF                 shift, and go to state 10
    SWITCH             shift, and go to state 11
    WHILE              shift, and go to state 12
    DO                 shift, and go to state 13
    CONTINUE           shift, and go to state 14
    BREAK              shift, and go to state 15
    UNARYADD           shift, and go to state 16
    UNARYSUB           shift, and go to state 17
    SEMICOLON          shift, and go to state 18
    LCURLY             shift, and go to state 19
    ENUM               shift, and go to state 20
    IDENTIFIER         shift, and go to state 21
    RETURN             shift, and go to state 22
    FALSE              shift, and go to state 23
    TRUE               shift, and go to state 24
    INT_LITERAL        shift, and go to state 25
    FLOAT_LITERAL      shift, and go to state 26
    CHARACTER_LITERAL  shift, and go to state 27

    $default  reduce using rule 54 (case_statement)

    statement                  go to state 108
    block_statement            go to state 30
    variable_declaration       go to state 31
    data_type                  go to state 32
    enum_declaration           go to state 33
    function_declaration       go to state 34
    function_siganture         go to state 35
    function_data_type         go to state 36
    if_statement               go to state 37
    matched_if_statement       go to state 38
    unmatched_if_statement     go to state 39
    switch_statement           go to state 40
    iteration_statement        go to state 41
    function_call_statement    go to state 42
    expression                 go to state 43
    assign_expression          go to state 44
    logical_or_expression      go to state 45
    logical_and_expression     go to state 46
    equality_expression        go to state 47
    relational_expression      go to state 48
    additive_expression        go to state 49
    multiplicative_expression  go to state 50
    prefix_expression          go to state 51
    postfix_expression         go to state 52
    primary_expression         go to state 53
    literal                    go to state 54


state 194

   49 matched_if_statement: IF LPAREN expression RPAREN matched_if_statement ELSE . matched_if_statement

    IF      shift, and go to state 148
    LCURLY  shift, and go to state 19

    block_statement       go to state 30
    matched_if_statement  go to state 178
